import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
// import { TRPCProvider } from "./_trpc/client";
import { trpc } from "@/server/trpc/server";
import { HydrateClient } from "@/server/trpc/server";
import { Suspense } from "react";
import { ErrorBoundary } from "react-error-boundary";
import { TRPCProvider } from "./_trpc/client";
import Navbar from "@/components/Nav";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <TRPCProvider>
          <HydrateClient>
            <Navbar />
            <ErrorBoundary fallback={<div>Something went wrong</div>}>
              <Suspense fallback={<div>Loading...</div>}>
                <main className="pt-14">{children}</main>
              </Suspense>
            </ErrorBoundary>
          </HydrateClient>
        </TRPCProvider>
      </body>
    </html>
  );
}
